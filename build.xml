<!-- DALServer Ant build script. -->

<project name="DALServer" default="compile" basedir=".">

<!-- ===================== Property Definitions =========================== -->

  <property environment="env"/>
  <property file="lib/build.properties"/>

  <property name="app.name"      value="dals"/>
  <property name="app.path"      value="/${app.name}"/>
  <property name="app.version"   value="0.10-vos"/>
  <property name="build.home"    value="${basedir}/build"/>
  <property name="config.home"   value="${basedir}/config"/>
  <property name="dist.home"     value="${basedir}/dist"/>
  <property name="docs.home"     value="${dist.home}/docs"/>
  <property name="javadoc.home"  value="${dist.home}/docs/javadoc"/>
  <property name="src.home"      value="${basedir}/src"/>
  <property name="web.home"      value="${basedir}/web"/>
  <property name="tests.home"    value="${basedir}/tests"/>
  <property name="tests.reports" value="${build.home}/testreports"/>
  <property name="classes"       value="${build.home}/WEB-INF/classes"/>
  <property name="tclasses"      value="${build.home}/tclasses"/>
  <property name="tests.data"    value="${build.home}/tdata"/>
  <property name="tmp"           value="${build.home}/tmp"/>
  <property name="etc"           value="${basedir}/etc"/>


<!--  ==================== Compilation Control Options ==================== -->

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="false"/>
  <property name="compile.source"      value="1.8"/>
  <property name="compile.target"      value="1.8"/>


<!-- ================= External Dependencies =========================== -->

  <property name="cds-savot-3.0.jar" value="${basedir}/lib/cds-savot-3.0.jar"/>
  <property name="kxml2.jar" value="${basedir}/lib/kxml2-2.3.0.jar"/>
  <property name="texttable.jar" value="${basedir}/lib/texttable.jar"/>
  <property name="fits.jar" value="${basedir}/lib/nom-tam-fits-1.11.jar"/>
  <property name="nom.tam.fits.jar" value="${basedir}/lib/nom-tam-fits-1.11.jar"/>
  <property name="postgresql-jdbc.jar" value="${basedir}/lib/postgresql-jdbc.jar"/>
  <property name="junit.jar" value="${basedir}/lib/junit-4.8.1.jar"/>
  <property name="nekohtml.jar" value="${basedir}/lib/nekohtml.jar"/>

  <property name="cadcDALI.jar" value="${basedir}/lib/cadcDALI.jar"/>
  <property name="cadcLog.jar" value="${basedir}/lib/cadcLog.jar"/>
  <property name="cadcRegistryClient.jar" value="${basedir}/lib/cadcRegistryClient.jar"/>
  <property name="cadcTAP.jar" value="${basedir}/lib/cadcTAP.jar"/>
  <property name="cadcUWS.jar" value="${basedir}/lib/cadcUWS.jar"/>
  <property name="cadcUtil.jar" value="${basedir}/lib/cadcUtil.jar"/>
  <property name="cadcVOSI.jar" value="${basedir}/lib/cadcVOSI.jar"/>

  <property name="commons-fileupload.jar" value="${basedir}/lib/commons-fileupload.jar"/>
  <property name="commons-logging.jar" value="${basedir}/lib/commons-logging.jar"/>
  <property name="commons-cli.jar" value="${basedir}/lib/commons-cli-1.3.jar"/>
  <property name="commons-dbcp.jar" value="${basedir}/lib/commons-dbcp-1.4.jar"/>
  <property name="commons-pool.jar" value="${basedir}/lib/commons-pool-1.6.jar"/>
  <property name="javax.servlet.jar" value="${basedir}/lib/javax.servlet.jar"/>
  <property name="javacsv.jar" value="${basedir}/lib/javacsv.jar"/>
  <property name="jdom2.jar" value="${basedir}/lib/jdom2.jar"/>
  <property name="jsqlparser.jar" value="${basedir}/lib/jsqlparser.jar"/>
  <property name="log4j.jar" value="${basedir}/lib/log4j.jar"/>
  <property name="org.restlet.ext.fileupload.jar"
	    value="${basedir}/lib/org.restlet.ext.fileupload.jar"/>
  <property name="org.restlet.ext.servlet.jar"
	    value="${basedir}/lib/org.restlet.ext.servlet.jar"/>
  <property name="org.restlet.jar" value="${basedir}/lib/org.restlet.jar"/>
  <property name="spring.jar" value="${basedir}/lib/spring.jar"/>
  <property name="xerces.jar" value="${basedir}/lib/xerces.jar"/>
  <property name="xmlParserAPIs.jar" value="${basedir}/lib/xmlParserAPIs-2.6.1.jar"/>


<!-- ==================== Compilation Classpath =========================== -->

  <path id="compile.classpath">
    <pathelement location="${classes}" />

    <!-- Include all external JAR files here -->
    <pathelement location="${cds-savot-3.0.jar}"/>
    <pathelement location="${kxml2.jar}"/>
    <pathelement location="${texttable.jar}"/>
    <pathelement location="${fits.jar}"/>
    <pathelement location="${nom.tam.fits.jar}"/>
    <pathelement location="${postgresql-jdbc.jar}"/>
    <pathelement location="${basedir}/lib/FITSWCS-2.4+dev.jar"/>
    <pathelement location="${basedir}/lib/horizon-data.jar"/>

    <pathelement location="${cadcDALI.jar}"/>
    <pathelement location="${cadcLog.jar}"/>
    <pathelement location="${cadcRegistryClient.jar}"/>
    <pathelement location="${cadcTAP.jar}"/>
    <pathelement location="${cadcUWS.jar}"/>
    <pathelement location="${cadcUtil.jar}"/>
    <pathelement location="${cadcVOSI.jar}"/>

    <pathelement location="${commons-fileupload.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-cli.jar}"/>
    <pathelement location="${commons-dbcp.jar}"/>
    <pathelement location="${commons-pool.jar}"/>
    <pathelement location="${javax.servlet.jar}"/>
    <pathelement location="${javacsv.jar}"/>
    <pathelement location="${jdom2.jar}"/>
    <pathelement location="${jsqlparser.jar}"/>
    <pathelement location="${log4j.jar}"/>
    <pathelement location="${org.restlet.ext.fileupload.jar}"/>
    <pathelement location="${org.restlet.ext.servlet.jar}"/>
    <pathelement location="${org.restlet.jar}"/>
    <pathelement location="${spring.jar}"/>
    <pathelement location="${xerces.jar}"/>
    <pathelement location="${xmlParserAPIs.jar}"/>

  </path>

  <path id="compile.tests.classpath">
    <pathelement location="${tclasses}" />
    <path refid="compile.classpath" />
    <pathelement location="${junit.jar}"/>
  </path>


<!-- ==================== Clean Targets ==================================== -->

  <target name="clean"
   description="Delete build directory">
    <delete dir="${build.home}"/>
  </target>

  <target name="clean-all" depends="clean"
          description="Delete build and dist directories">
    <delete dir="${dist.home}"/>
    <delete file="${web.home}/README.txt"/>
<!--
    <delete dir="${web.home}/docs/javadoc"/>
-->
  </target>


<!-- ==================== Build Targets =================================== -->

  <target name="all" depends="clean-all,dist"
   description="Clean build and dist directories, then compile"/>

  <target name="dist" depends="build" description="Create binary distribution">
    <!-- Copy documentation subdirectories -->
    <copy todir="${dist.home}/docs">
      <fileset dir="${web.home}/docs"/>
    </copy>

    <!-- Create a library JAR file for use by extension packages -->
    <jar jarfile="${dist.home}/${app.name}.jar"
         basedir="${build.home}/WEB-INF/classes"/>

    <!-- Create application WAR file -->
    <jar jarfile="${dist.home}/${app.name}.war"
         basedir="${build.home}"/>

    <!-- Copy the configuration templates -->
<!--
    <copy todir="${dist.home}">
      <fileset dir="${config.home}"/>
    </copy>
-->

    <!-- Copy additional files to ${dist.home}, as necessary, HERE -->
  </target>

  <target name="build" depends="jar,javadoc"
          description="Build the library and documentation"/>


<!-- ==================== Compilation Targets ================================= -->

  <target name="compile" depends="prepare" description="Compile Java sources">
    <!-- Compile Java classes as necessary -->
    <javac srcdir="${src.home}"
          destdir="${classes}"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}">
        <classpath refid="compile.classpath"/>
    </javac>

    <!-- Copy application resources -->
    <copy  todir="${classes}">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>
    <copy todir="${classes}/dalserver/slap"
          file="${basedir}/lib/slap-keywords.xml"/>
    <copy todir="${classes}" file="config/log4j.properties"/>
  </target>

  <target name="compilefile" depends="prepare" if="src-file"
          description="Compile a single Test class">
    <!-- Compile Java classes as necessary -->
    <javac srcdir="${src.home}"
          destdir="${classes}"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
        <include name="${src-file}"/>
    </javac>
  </target>


<!-- ==================== Javadoc Target ================================== -->

  <target name="javadoc" depends="compile" description="Create Javadoc API documentation">
<!--
    <pathconvert property="cpProp" refid="compile.classpath"/>
    <echo>Compile classpath is ${cpProp}"</echo>
-->
    <javadoc sourcepath="${src.home}" destdir="${docs.home}" classpathref="compile.classpath"/>
  </target>


<!-- ==================== Testing Targets ================================= -->

  <target name="compiletests" depends="test-init,compile" description="Compile Test classes">
    <!-- Compile Java classes as necessary -->
    <javac srcdir="${tests.home}"
          destdir="${tclasses}"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.tests.classpath"/>
    </javac>

    <!-- Copy test resources -->
    <copy  todir="${tclasses}">
      <fileset dir="${tests.home}" excludes="**/*.java,**/resources/**"/>
    </copy>

    <copy  todir="${tests.data}">
      <fileset dir="${tests.home}/resources/testdata" />
    </copy>
  </target>

  <target name="compiletestfile" depends="test-init,prepare" if="src-file"
          description="Compile a single Test class">
    <!-- Compile Java classes as necessary -->
    <javac srcdir="${tests.home}"
          destdir="${tclasses}"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.tests.classpath"/>
        <include name="${src-file}"/>
    </javac>
  </target>

  <target name="test" depends="compiletests" description="Run JUnit Tests">
    <junit printsummary="yes"  includeAntRuntime="true" haltonfailure="yes">
       <classpath refid="compile.tests.classpath" />
       <formatter type="plain" />
       <batchtest todir="${tests.reports}">
         <fileset dir="${tclasses}">
           <include name="**/*Test.class" />
           <include name="**/*TestCase.class" />
         </fileset>
       </batchtest>
       <sysproperty key="test.tmpdir" value="${tmp}"/>
       <sysproperty key="test.outdir" value="${tests.data}"/>
    </junit>
  </target>

  <target name="testclass" if="test-class" description="Run a single JUnit Test class">
    <junit printsummary="yes"  includeAntRuntime="true" haltonfailure="yes">
       <classpath refid="compile.tests.classpath" />
       <formatter type="plain" />
       <batchtest todir="${tests.reports}">
         <fileset dir="${tclasses}">
           <include name="**/${test-class}.class" />
         </fileset>
       </batchtest>
       <sysproperty key="test.tmpdir" value="${tmp}"/>
       <sysproperty key="test.outdir" value="${tests.data}"/>
    </junit>
  </target>


<!-- ==================== JAR Targets ===================================== -->

  <target name="war" depends="compile" description="Update only the War file">
    <jar jarfile="${dist.home}/${app.name}.war"
         basedir="${build.home}"/>
  </target>

  <target name="jar" depends="compile" description="build the DALServer JAR file">
    <jar jarfile="${dist.home}/${app.name}.jar"
         basedir="${build.home}/WEB-INF/classes"/>
  </target>


<!-- ==================== Prepare Target ================================== -->

  <target name="init">
      <mkdir dir="${build.home}"/>
      <mkdir dir="${classes}"/>
      <mkdir dir="${web.home}"/>
      <mkdir dir="${dist.home}"/>
      <mkdir dir="${docs.home}"/>
      <mkdir dir="${javadoc.home}"/>
      <copy file="${etc}/dist.readme" tofile="${dist.home}/README" />
  </target>

  <target name="test-init" depends="init">
      <mkdir dir="${tclasses}"/>
      <mkdir dir="${tests.reports}"/>
      <mkdir dir="${tmp}"/>
  </target>

  <target name="app-init">
      <mkdir dir="${app.build}"/>
      <mkdir dir="${app.build}/WEB-INF/lib"/>
  </target>

  <target name="prepare" depends="init">
    <!-- Copy static content of this web application -->
    <copy todir="${build.home}">
      <fileset dir="${web.home}"/>
    </copy>

    <!-- Copy external dependencies as required -->
    <mkdir  dir="${build.home}/WEB-INF/lib"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cds-savot-3.0.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${kxml2.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${texttable.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${postgresql-jdbc.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${nom.tam.fits.jar}"/>

    <copy todir="${build.home}/WEB-INF/lib" file="${cadcDALI.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cadcLog.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cadcRegistryClient.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cadcTAP.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cadcUWS.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cadcUtil.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${cadcVOSI.jar}"/>

    <copy todir="${build.home}/WEB-INF/lib" file="${commons-fileupload.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${commons-logging.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${commons-cli.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${commons-dbcp.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${commons-pool.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${javax.servlet.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${javacsv.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${jdom2.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${jsqlparser.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${log4j.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${org.restlet.ext.fileupload.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${org.restlet.ext.servlet.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${org.restlet.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${spring.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${xerces.jar}"/>
    <copy todir="${build.home}/WEB-INF/lib" file="${xmlParserAPIs.jar}"/>

    <copy tofile="${web.home}/README.txt" file="README"/>

    <!-- Copy static files from external dependencies as needed -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->

  </target>

</project>
